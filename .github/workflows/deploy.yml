# The name of the workflow, which will appear in the "Actions" tab on GitHub.
name: Deploy Canvas to GitHub Pages

# --- Triggers ---
# This section defines when the workflow should automatically run.
on:
  push:
    branches:
      - main
    paths:
      - 'source/canvas.aseprite'
      - 'index.html'
  
  # This allows you to manually trigger the workflow from the "Actions" tab.
  workflow_dispatch:

# --- Jobs ---
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    # --- Steps ---
    steps:
      # Step 1: Check out the repository's code.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up the Node.js environment.
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 3: Install the NEW Aseprite to JSON converter tool.
      # We are now using 'ase-util', a reliable third-party tool.
      - name: Install Aseprite utility (ase-util)
        run: npm install -g ase-util

      # Step 4: Create a directory for the published site.
      - name: Create public directory
        run: mkdir public

      # Step 5: Convert the Aseprite file to JSON using the new tool.
      # The command structure is slightly different for this tool.
      # 'ase-util export' is the command to run.
      # --output-dir: Specifies where to put the output files.
      # --data-filename: Sets the name for our JSON data file.
      - name: Convert Aseprite to JSON
        run: ase-util export --output-dir public --data-filename canvas.json source/canvas.aseprite

      # Step 6: Copy the main HTML file to the public directory.
      - name: Copy index.html into public directory
        run: cp index.html public/

      # Step 7: Deploy the contents of the 'public' directory to GitHub Pages.
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          force_orphan: true
